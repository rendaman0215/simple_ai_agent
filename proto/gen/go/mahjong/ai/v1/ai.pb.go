// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: mahjong/ai/v1/ai.proto

package aiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN         HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING         HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING     HealthCheckResponse_ServingStatus = 2
	HealthCheckResponse_SERVICE_UNKNOWN HealthCheckResponse_ServingStatus = 3 // サービスが見つからない場合
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
		3: "SERVICE_UNKNOWN",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":         0,
		"SERVING":         1,
		"NOT_SERVING":     2,
		"SERVICE_UNKNOWN": 3,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_mahjong_ai_v1_ai_proto_enumTypes[0].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_mahjong_ai_v1_ai_proto_enumTypes[0]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_mahjong_ai_v1_ai_proto_rawDescGZIP(), []int{7, 0}
}

// エラー情報
type ErrorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`       // エラーコード
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // エラーメッセージ
	Details string `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"` // エラー詳細
}

func (x *ErrorInfo) Reset() {
	*x = ErrorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mahjong_ai_v1_ai_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorInfo) ProtoMessage() {}

func (x *ErrorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mahjong_ai_v1_ai_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorInfo.ProtoReflect.Descriptor instead.
func (*ErrorInfo) Descriptor() ([]byte, []int) {
	return file_mahjong_ai_v1_ai_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrorInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorInfo) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// リクエストメタデータ
type RequestMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`                                                                    // リクエストID
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                                     // リクエスト時刻
	ClientVersion string                 `protobuf:"bytes,3,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`                                                        // クライアントバージョン
	Headers       map[string]string      `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 追加ヘッダー
}

func (x *RequestMetadata) Reset() {
	*x = RequestMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mahjong_ai_v1_ai_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMetadata) ProtoMessage() {}

func (x *RequestMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_mahjong_ai_v1_ai_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMetadata.ProtoReflect.Descriptor instead.
func (*RequestMetadata) Descriptor() ([]byte, []int) {
	return file_mahjong_ai_v1_ai_proto_rawDescGZIP(), []int{1}
}

func (x *RequestMetadata) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RequestMetadata) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *RequestMetadata) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *RequestMetadata) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

// レスポンスメタデータ
type ResponseMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`                         // リクエストID
	Timestamp        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                          // レスポンス時刻
	ProcessingTimeMs int64                  `protobuf:"varint,3,opt,name=processing_time_ms,json=processingTimeMs,proto3" json:"processing_time_ms,omitempty"` // 処理時間（ミリ秒）
	ServerVersion    string                 `protobuf:"bytes,4,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`             // サーバーバージョン
}

func (x *ResponseMetadata) Reset() {
	*x = ResponseMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mahjong_ai_v1_ai_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMetadata) ProtoMessage() {}

func (x *ResponseMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_mahjong_ai_v1_ai_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMetadata.ProtoReflect.Descriptor instead.
func (*ResponseMetadata) Descriptor() ([]byte, []int) {
	return file_mahjong_ai_v1_ai_proto_rawDescGZIP(), []int{2}
}

func (x *ResponseMetadata) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ResponseMetadata) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ResponseMetadata) GetProcessingTimeMs() int64 {
	if x != nil {
		return x.ProcessingTimeMs
	}
	return 0
}

func (x *ResponseMetadata) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

// 麻雀AIのリクエスト
type AskMahjongAIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prompt      string           `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`                         // 麻雀AIへの質問
	Metadata    *RequestMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`                     // リクエストメタデータ
	MaxTokens   int32            `protobuf:"varint,3,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"` // 最大トークン数
	Temperature float32          `protobuf:"fixed32,4,opt,name=temperature,proto3" json:"temperature,omitempty"`             // 温度パラメータ (0.0-2.0)
	Context     []string         `protobuf:"bytes,5,rep,name=context,proto3" json:"context,omitempty"`                       // コンテキスト情報
}

func (x *AskMahjongAIRequest) Reset() {
	*x = AskMahjongAIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mahjong_ai_v1_ai_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskMahjongAIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskMahjongAIRequest) ProtoMessage() {}

func (x *AskMahjongAIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mahjong_ai_v1_ai_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskMahjongAIRequest.ProtoReflect.Descriptor instead.
func (*AskMahjongAIRequest) Descriptor() ([]byte, []int) {
	return file_mahjong_ai_v1_ai_proto_rawDescGZIP(), []int{3}
}

func (x *AskMahjongAIRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *AskMahjongAIRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AskMahjongAIRequest) GetMaxTokens() int32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

func (x *AskMahjongAIRequest) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *AskMahjongAIRequest) GetContext() []string {
	if x != nil {
		return x.Context
	}
	return nil
}

// 麻雀AIのレスポンス
type AskMahjongAIResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*AskMahjongAIResponse_Response
	//	*AskMahjongAIResponse_Error
	Result     isAskMahjongAIResponse_Result `protobuf_oneof:"result"`
	Metadata   *ResponseMetadata             `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`                        // レスポンスメタデータ
	TokensUsed int32                         `protobuf:"varint,4,opt,name=tokens_used,json=tokensUsed,proto3" json:"tokens_used,omitempty"` // 使用トークン数
	Confidence float32                       `protobuf:"fixed32,5,opt,name=confidence,proto3" json:"confidence,omitempty"`                  // 信頼度スコア (0.0-1.0)
}

func (x *AskMahjongAIResponse) Reset() {
	*x = AskMahjongAIResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mahjong_ai_v1_ai_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskMahjongAIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskMahjongAIResponse) ProtoMessage() {}

func (x *AskMahjongAIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mahjong_ai_v1_ai_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskMahjongAIResponse.ProtoReflect.Descriptor instead.
func (*AskMahjongAIResponse) Descriptor() ([]byte, []int) {
	return file_mahjong_ai_v1_ai_proto_rawDescGZIP(), []int{4}
}

func (m *AskMahjongAIResponse) GetResult() isAskMahjongAIResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *AskMahjongAIResponse) GetResponse() string {
	if x, ok := x.GetResult().(*AskMahjongAIResponse_Response); ok {
		return x.Response
	}
	return ""
}

func (x *AskMahjongAIResponse) GetError() *ErrorInfo {
	if x, ok := x.GetResult().(*AskMahjongAIResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *AskMahjongAIResponse) GetMetadata() *ResponseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AskMahjongAIResponse) GetTokensUsed() int32 {
	if x != nil {
		return x.TokensUsed
	}
	return 0
}

func (x *AskMahjongAIResponse) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

type isAskMahjongAIResponse_Result interface {
	isAskMahjongAIResponse_Result()
}

type AskMahjongAIResponse_Response struct {
	Response string `protobuf:"bytes,1,opt,name=response,proto3,oneof"` // 成功時のレスポンス
}

type AskMahjongAIResponse_Error struct {
	Error *ErrorInfo `protobuf:"bytes,2,opt,name=error,proto3,oneof"` // エラー情報
}

func (*AskMahjongAIResponse_Response) isAskMahjongAIResponse_Result() {}

func (*AskMahjongAIResponse_Error) isAskMahjongAIResponse_Result() {}

// ストリーミングレスポンス
type AskMahjongAIStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Chunk:
	//
	//	*AskMahjongAIStreamResponse_TextChunk
	//	*AskMahjongAIStreamResponse_Error
	//	*AskMahjongAIStreamResponse_Metadata
	Chunk   isAskMahjongAIStreamResponse_Chunk `protobuf_oneof:"chunk"`
	IsFinal bool                               `protobuf:"varint,4,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"` // 最終チャンクかどうか
}

func (x *AskMahjongAIStreamResponse) Reset() {
	*x = AskMahjongAIStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mahjong_ai_v1_ai_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskMahjongAIStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskMahjongAIStreamResponse) ProtoMessage() {}

func (x *AskMahjongAIStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mahjong_ai_v1_ai_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskMahjongAIStreamResponse.ProtoReflect.Descriptor instead.
func (*AskMahjongAIStreamResponse) Descriptor() ([]byte, []int) {
	return file_mahjong_ai_v1_ai_proto_rawDescGZIP(), []int{5}
}

func (m *AskMahjongAIStreamResponse) GetChunk() isAskMahjongAIStreamResponse_Chunk {
	if m != nil {
		return m.Chunk
	}
	return nil
}

func (x *AskMahjongAIStreamResponse) GetTextChunk() string {
	if x, ok := x.GetChunk().(*AskMahjongAIStreamResponse_TextChunk); ok {
		return x.TextChunk
	}
	return ""
}

func (x *AskMahjongAIStreamResponse) GetError() *ErrorInfo {
	if x, ok := x.GetChunk().(*AskMahjongAIStreamResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *AskMahjongAIStreamResponse) GetMetadata() *ResponseMetadata {
	if x, ok := x.GetChunk().(*AskMahjongAIStreamResponse_Metadata); ok {
		return x.Metadata
	}
	return nil
}

func (x *AskMahjongAIStreamResponse) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

type isAskMahjongAIStreamResponse_Chunk interface {
	isAskMahjongAIStreamResponse_Chunk()
}

type AskMahjongAIStreamResponse_TextChunk struct {
	TextChunk string `protobuf:"bytes,1,opt,name=text_chunk,json=textChunk,proto3,oneof"` // テキストチャンク
}

type AskMahjongAIStreamResponse_Error struct {
	Error *ErrorInfo `protobuf:"bytes,2,opt,name=error,proto3,oneof"` // エラー情報
}

type AskMahjongAIStreamResponse_Metadata struct {
	Metadata *ResponseMetadata `protobuf:"bytes,3,opt,name=metadata,proto3,oneof"` // 最終メタデータ（ストリーム終了時）
}

func (*AskMahjongAIStreamResponse_TextChunk) isAskMahjongAIStreamResponse_Chunk() {}

func (*AskMahjongAIStreamResponse_Error) isAskMahjongAIStreamResponse_Chunk() {}

func (*AskMahjongAIStreamResponse_Metadata) isAskMahjongAIStreamResponse_Chunk() {}

// ヘルスチェックリクエスト
type HealthCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"` // サービス名（オプション）
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mahjong_ai_v1_ai_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mahjong_ai_v1_ai_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_mahjong_ai_v1_ai_proto_rawDescGZIP(), []int{6}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

// ヘルスチェックレスポンス
type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=mahjong.ai.v1.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	Message   string                            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`     // ステータスメッセージ
	Timestamp *timestamppb.Timestamp            `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // チェック時刻
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mahjong_ai_v1_ai_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mahjong_ai_v1_ai_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_mahjong_ai_v1_ai_proto_rawDescGZIP(), []int{7}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_mahjong_ai_v1_ai_proto protoreflect.FileDescriptor

var file_mahjong_ai_v1_ai_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2f, 0x61, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e,
	0x67, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x94, 0x02,
	0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x45, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xc0, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc4, 0x01, 0x0a, 0x13, 0x41, 0x73, 0x6b, 0x4d,
	0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x41, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x68, 0x6a,
	0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xee,
	0x01, 0x0a, 0x14, 0x41, 0x73, 0x6b, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x41, 0x49, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x68, 0x6a,
	0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x5f, 0x75,
	0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xd2, 0x01, 0x0a, 0x1a, 0x41, 0x73, 0x6b, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x41, 0x49,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12,
	0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x22, 0x2e, 0x0a, 0x12, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x84, 0x02, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x6d,
	0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x4f, 0x0a, 0x0d, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x03, 0x32, 0xa8, 0x02, 0x0a, 0x10,
	0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x41, 0x49, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x57, 0x0a, 0x0c, 0x41, 0x73, 0x6b, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x41, 0x49,
	0x12, 0x22, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x73, 0x6b, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x41, 0x49, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x6b, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x41,
	0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x41, 0x73, 0x6b,
	0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x41, 0x49, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x22, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x73, 0x6b, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x41, 0x49, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x6b, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x41, 0x49,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01,
	0x12, 0x54, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12,
	0x21, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xae, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x42, 0x07, 0x41, 0x69,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x6e, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x30, 0x32, 0x31, 0x35,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2f, 0x61, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x61,
	0x69, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4d, 0x41, 0x58, 0xaa, 0x02, 0x0d, 0x4d, 0x61, 0x68, 0x6a,
	0x6f, 0x6e, 0x67, 0x2e, 0x41, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x4d, 0x61, 0x68, 0x6a,
	0x6f, 0x6e, 0x67, 0x5c, 0x41, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x4d, 0x61, 0x68, 0x6a,
	0x6f, 0x6e, 0x67, 0x5c, 0x41, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x3a,
	0x3a, 0x41, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mahjong_ai_v1_ai_proto_rawDescOnce sync.Once
	file_mahjong_ai_v1_ai_proto_rawDescData = file_mahjong_ai_v1_ai_proto_rawDesc
)

func file_mahjong_ai_v1_ai_proto_rawDescGZIP() []byte {
	file_mahjong_ai_v1_ai_proto_rawDescOnce.Do(func() {
		file_mahjong_ai_v1_ai_proto_rawDescData = protoimpl.X.CompressGZIP(file_mahjong_ai_v1_ai_proto_rawDescData)
	})
	return file_mahjong_ai_v1_ai_proto_rawDescData
}

var file_mahjong_ai_v1_ai_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mahjong_ai_v1_ai_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_mahjong_ai_v1_ai_proto_goTypes = []interface{}{
	(HealthCheckResponse_ServingStatus)(0), // 0: mahjong.ai.v1.HealthCheckResponse.ServingStatus
	(*ErrorInfo)(nil),                      // 1: mahjong.ai.v1.ErrorInfo
	(*RequestMetadata)(nil),                // 2: mahjong.ai.v1.RequestMetadata
	(*ResponseMetadata)(nil),               // 3: mahjong.ai.v1.ResponseMetadata
	(*AskMahjongAIRequest)(nil),            // 4: mahjong.ai.v1.AskMahjongAIRequest
	(*AskMahjongAIResponse)(nil),           // 5: mahjong.ai.v1.AskMahjongAIResponse
	(*AskMahjongAIStreamResponse)(nil),     // 6: mahjong.ai.v1.AskMahjongAIStreamResponse
	(*HealthCheckRequest)(nil),             // 7: mahjong.ai.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),            // 8: mahjong.ai.v1.HealthCheckResponse
	nil,                                    // 9: mahjong.ai.v1.RequestMetadata.HeadersEntry
	(*timestamppb.Timestamp)(nil),          // 10: google.protobuf.Timestamp
}
var file_mahjong_ai_v1_ai_proto_depIdxs = []int32{
	10, // 0: mahjong.ai.v1.RequestMetadata.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 1: mahjong.ai.v1.RequestMetadata.headers:type_name -> mahjong.ai.v1.RequestMetadata.HeadersEntry
	10, // 2: mahjong.ai.v1.ResponseMetadata.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 3: mahjong.ai.v1.AskMahjongAIRequest.metadata:type_name -> mahjong.ai.v1.RequestMetadata
	1,  // 4: mahjong.ai.v1.AskMahjongAIResponse.error:type_name -> mahjong.ai.v1.ErrorInfo
	3,  // 5: mahjong.ai.v1.AskMahjongAIResponse.metadata:type_name -> mahjong.ai.v1.ResponseMetadata
	1,  // 6: mahjong.ai.v1.AskMahjongAIStreamResponse.error:type_name -> mahjong.ai.v1.ErrorInfo
	3,  // 7: mahjong.ai.v1.AskMahjongAIStreamResponse.metadata:type_name -> mahjong.ai.v1.ResponseMetadata
	0,  // 8: mahjong.ai.v1.HealthCheckResponse.status:type_name -> mahjong.ai.v1.HealthCheckResponse.ServingStatus
	10, // 9: mahjong.ai.v1.HealthCheckResponse.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 10: mahjong.ai.v1.MahjongAIService.AskMahjongAI:input_type -> mahjong.ai.v1.AskMahjongAIRequest
	4,  // 11: mahjong.ai.v1.MahjongAIService.AskMahjongAIStream:input_type -> mahjong.ai.v1.AskMahjongAIRequest
	7,  // 12: mahjong.ai.v1.MahjongAIService.HealthCheck:input_type -> mahjong.ai.v1.HealthCheckRequest
	5,  // 13: mahjong.ai.v1.MahjongAIService.AskMahjongAI:output_type -> mahjong.ai.v1.AskMahjongAIResponse
	6,  // 14: mahjong.ai.v1.MahjongAIService.AskMahjongAIStream:output_type -> mahjong.ai.v1.AskMahjongAIStreamResponse
	8,  // 15: mahjong.ai.v1.MahjongAIService.HealthCheck:output_type -> mahjong.ai.v1.HealthCheckResponse
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_mahjong_ai_v1_ai_proto_init() }
func file_mahjong_ai_v1_ai_proto_init() {
	if File_mahjong_ai_v1_ai_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mahjong_ai_v1_ai_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mahjong_ai_v1_ai_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mahjong_ai_v1_ai_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mahjong_ai_v1_ai_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskMahjongAIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mahjong_ai_v1_ai_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskMahjongAIResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mahjong_ai_v1_ai_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskMahjongAIStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mahjong_ai_v1_ai_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mahjong_ai_v1_ai_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mahjong_ai_v1_ai_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*AskMahjongAIResponse_Response)(nil),
		(*AskMahjongAIResponse_Error)(nil),
	}
	file_mahjong_ai_v1_ai_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*AskMahjongAIStreamResponse_TextChunk)(nil),
		(*AskMahjongAIStreamResponse_Error)(nil),
		(*AskMahjongAIStreamResponse_Metadata)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mahjong_ai_v1_ai_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mahjong_ai_v1_ai_proto_goTypes,
		DependencyIndexes: file_mahjong_ai_v1_ai_proto_depIdxs,
		EnumInfos:         file_mahjong_ai_v1_ai_proto_enumTypes,
		MessageInfos:      file_mahjong_ai_v1_ai_proto_msgTypes,
	}.Build()
	File_mahjong_ai_v1_ai_proto = out.File
	file_mahjong_ai_v1_ai_proto_rawDesc = nil
	file_mahjong_ai_v1_ai_proto_goTypes = nil
	file_mahjong_ai_v1_ai_proto_depIdxs = nil
}
